variables:
  STABLE_IMAGE: "docker.corp.pingidentity.com:5000/testing/ui-library-admin:1.1"
  LATEST_IMAGE: "docker.corp.pingidentity.com:5000/testing/pingux-latest:1.1"

stages:
  - build-ci-image
  - build-test-lint
  - screenshot

.yarn-install-and-build: &yarn-install-and-build
  before_script:
    - yarn --frozen-lockfile

# NOTE: Make and test changes to the "latest" image _before_ merging them to the stable one. Otherwise, all
# pipelines will be impacted because they use the stable image for running scripts.
build_ci_stable_image:
  stage: build-ci-image
  rules:
    - changes:
      - shared/docker/stable/Dockerfile
  script:
    - docker build --pull --tag "$STABLE_IMAGE" ./shared/docker/stable
    - docker push "$STABLE_IMAGE"
  tags:
    - eks-platform-publish-docker

build_ci_latest_image:
  stage: build-ci-image
  rules:
    - changes:
      - shared/docker/latest/Dockerfile
  script:
    - docker build --pull --tag "$LATEST_IMAGE" ./shared/docker/latest
    - docker push "$LATEST_IMAGE"
  tags:
    - eks-platform-publish-docker

build:
  <<: *yarn-install-and-build
  stage: build-test-lint
  tags:
    - default-gitlab-runner
  image: $STABLE_IMAGE
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - sh commit_lint.sh
    - lerna run build
    - lerna run lint
    - lerna run coverage-ci
  artifacts:
    paths:
      - ./packages/**/lib

build-no-lockfile:
  stage: build-test-lint
  tags:
    - default-gitlab-runner
  image: docker.corp.pingidentity.com:5000/testing/ui-library-admin:1.1
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - packages/astro/**/*
  script:
    - yarn --no-lockfile --ignore-engines
    - lerna run build

backstop:
  <<: *yarn-install-and-build
  stage: screenshot
  tags:
    - default-gitlab-runner
  image: $STABLE_IMAGE
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - packages/ui-library/*
  script:
    - lerna run demo --scope ui-library
    - lerna run backstop-ci

chromatic:
  <<: *yarn-install-and-build
  stage: screenshot
  tags:
    - default-gitlab-runner
  image: $STABLE_IMAGE
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - packages/astro/*
      when: manual
      allow_failure: true
  script:
    - lerna run chromatic -- --project-token=$CHROMATIC_PROJECT_TOKEN --build-script-name demo --exit-zero-on-changes --scope astro
