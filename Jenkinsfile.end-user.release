pipeline {
  agent {
    label 'ui-library-cdn-deploy'
  }
  stages {
    stage('run-tests') {
      steps {
        dir("${env.WORKSPACE}/packages/end-user") {
          container('node-builder') {
            echo "Running end-user linting and tests"
            sh "npm install"
            // sh "npm run lint"
            sh "npm run coverage"
          }
        }
      }
    }
    stage('increment version') {
      steps {
        dir ("${env.WORKSPACE}/packages/end-user") {
          container('node-builder') {
            echo "Incrementing the version: ${params.VERSION_TYPE}"
            sh "npm --no-git-tag-version ${params.VERSION_TYPE} version"

            script {
              env.PACKAGE_JSON = readJSON file: "./package.json"
              env.RELEASE_VERSION = "${PACKAGE_JSON}.version"
              env.GIT_RELEASE_TAG = "end-user-${RELEASE_VERSION}"
            }


            sh "git add package.json"
            sh "git commit -m 'End user ${params.VERSION_TYPE}: ${RELEASE_VERSION}'"
            sh "git push origin ${params.RELEASE_BRANCH}"

            sh "git tag ${GIT_RELEASE_TAG}"
            sh "git push origin ${GIT_RELEASE_TAG}"
          }
        }
      }
    }
    stage('npm-publish') {
      steps {
        dir("${env.WORKSPACE}/packages/end-user") {
          container('node-builder') {
            echo "Building & publishing end-user ${RELEASE_VERSION}"
            configFileProvider([configFile(fileId: 'art01.jenkins.settings.xml', targetLocation: 'settings.xml')]) {
              sh "npm run dist"
              sh "cd dist && npm publish"
            }
          }
        }
      }
      post {
        always {
          archiveArtifacts artifacts: "packages/end-user/cdn/**", fingerprint: true
        }
      }
    }
  }
  post {
    success {
      container('node-builder') {
        withAWS(region: 'us-east-2', role: 'prod-k8s-cdn-deployer', roleAccount: '208980577242') {
          withAWS(region: 'us-east-2', role: 'prod-cdn-deploy-role', roleAccount: '208980577242') {
            s3Upload(bucket:'pingidentity-prod-assets-us-east-2', path:"ux/end-user/${RELEASE_VERSION}", file: "${env.WORKSPACE}/packages/end-user/cdn/")
          }
        }
      }
    }
    cleanup {
        cleanWs()
    }
  }
}
