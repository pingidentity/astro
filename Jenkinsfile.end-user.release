def pjson = readJSON file: './package.json'
def releaseVersion = pjson.version
def gitTag = "end-user-${releaseVersion}"

pipeline {
  agent {
    label 'pingux-end-user-release-and-cdn-deploy'
  }
  stages {
    stage('run-tests') {
      steps {
        dir("${env.WORKSPACE}/packages/end-user") {
          container('node-builder') {
            echo 'Running end-user linting and tests'
            sh "npm run lint"
            sh "npm run coverage"
          }
        }
      }
    }
    stage('npm-publish') {
      steps {
        dir("${env.WORKSPACE}/packages/end-user") {
          container('node-builder') {
            echo "Building & publishing end-user ${releaseVersion}"
            configFileProvider([configFile(fileId: 'art01.jenkins.settings.xml', targetLocation: 'settings.xml')]) {
              sh "npm run dist"
              sh "cd dist && npm publish"
            }
          }
        }
      }
      post {
        success {
          sh "git tag ${gitTag}"
          sh "git push origin ${gitTag}"
        }
        always {
          archiveArtifacts artifacts: "packages/end-user/cdn/**", fingerprint: true
        }
      }
    }
  }
  post {
    success {
      container('node-builder') {
        withAWS(region: 'us-east-2', role: 'prod-k8s-cdn-deployer', roleAccount: '208980577242') {
          withAWS(region: 'us-east-2', role: 'prod-cdn-deploy-role', roleAccount: '208980577242') {
            s3Upload(bucket:'pingidentity-prod-assets-us-east-2', path:"ux/end-user/${releaseVersion}", file: "${env.WORKSPACE}/packages/end-user/cdn/")
          }
        }
      }
    }
    cleanup {
        cleanWs()
    }
  }
}
