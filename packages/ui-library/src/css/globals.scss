
// To user the embedded font, each property using the ui-library must make the following declarations in your own code.
// The font definition files must be copied to a public folder within your project and the following @font-face
// declarations must be made with the proper source urls
// ---------------------------------------------------------------------------------------------------------------------
// @font-face { font-family: 'ProximaNovaRegular'; font-weight: normal; src: url('<path to source file>ProximaNova-Regular.otf'); }
// @font-face { font-family: 'ProximaNovaBold'; font-weight: bold; src: url('<path to source file>ProximaNova-Bold.otf'); }
// @font-face { font-family: 'ProximaNovaLight'; font-weight: normal; src: url('<path to source file>ProximaNova-Light.otf'); }
// @font-face { font-family: 'ProximaNovaSemibold'; font-weight: normal; src: url('<path to source file>ProximaNova-Semibold.otf'); }
// @font-face { font-family: 'ProximaNovaCondRegular'; font-weight: normal; src: url('<path to source file>ProximaNovaCond-Regular.otf'); }


// MASTER COLOR LIST
// Do not add or remove colors unless it is sanctioned by the design team
$colors: (
	'black': #000,
	'white': #fff,
	'active-blue': #2996cc,
	'active-blue-highlighted': #3ea0d1,
	'active-blue-inactive': #a9d5eb,
	'blue-grey': #9bacb4,
	'cinder-block': #e4e5e5,
	'critical-red': #ed3a03,￼￼
	'dolphin': #d8dbdc,￼￼￼￼￼￼
	'elephant': #929aa1,
	'elderly': #f4f7f9,
	'grass': #3cb66e,
	'manatee': #b1b5b8,
	'midnight': #4b637c,
	'oitnb': #ed3a03,
	'rabbit-fur': #d1d3d4,
	'required-yellow': #f2bb1a,
	'rhino': #9ea5a8,
	'slate': #3d454d,
	'sonic': #f0f6f7,
	'stone': #c2c3c4,
	'stratus': #bcbdbf,
	'success-green-highlighted': #4aba78,
	'success-green-inactive': #b1e2c5,
	'timberwolf': #e8ebed,
	'verde': #76cc99,
	'walrus': #575f67,
	'warning-text': #96702c,
	'warning-yellow': #ffd057,
	'warning-icon-yellow': #eeb91c
);
$color-black: map-get($colors, 'black');
$color-white: map-get($colors, 'white');
$color-active-blue: map-get($colors, 'active-blue');
$color-active-blue-highlighted: map-get($colors, 'active-blue-highlighted');
$color-active-blue-inactive: map-get($colors, 'active-blue-inactive');
$color-blue-grey: map-get($colors, 'blue-grey');
$color-cinder-block: map-get($colors, 'cinder-block');
$color-critical-red: map-get($colors, 'critical-red');
$color-dolphin: map-get($colors, 'dolphin');
$color-dolphin: #d8dbdc; // map-get is NOT evaluating propely for only this color (anywhere). Temp fix for now.
$color-elephant: map-get($colors, 'elephant');
$color-elderly: map-get($colors, 'elderly');
$color-grass: map-get($colors, 'grass');
$color-manatee: map-get($colors, 'manatee');
$color-midnight: map-get($colors, 'midnight');
$color-oitnb: map-get($colors, 'oitnb');
$color-rabbit-fur: map-get($colors, 'rabbit-fur');
$color-required-yellow: map-get($colors, 'required-yellow');
$color-rhino: map-get($colors, 'rhino');
$color-slate: map-get($colors, 'slate');
$color-sonic: map-get($colors, 'sonic');
$color-stone: map-get($colors, 'stone');
$color-stratus: map-get($colors, 'stratus');
$color-success-green-highlighted: map-get($colors, 'success-green-highlighted');
$color-success-green-inactive: map-get($colors, 'success-green-inactive');
$color-timberwolf: map-get($colors, 'timberwolf');
$color-verde: map-get($colors, 'verde');
$color-walrus: map-get($colors, 'walrus');
$color-warning-text: map-get($colors, 'warning-text');
$color-warning-yellow: map-get($colors, 'warning-yellow');
$color-warning-icon-yellow: map-get($colors, 'warning-icon-yellow');


// REUSABLE SEMANTIC COLOR VARS (use map-get for all other colors or when semantic meaning does not apply)
$color-text: map-get($colors, 'elephant');
$color-active: map-get($colors, 'active-blue');
$color-success: map-get($colors, 'success-green-highlighted');
$color-input-fill: map-get($colors, 'sonic');
$color-input-border: map-get($colors, 'rabbit-fur');
$color-input-text: map-get($colors, 'midnight');
$color-input-text-readonly: map-get($colors, 'rabbit-fur');
$color-input-placeholder: map-get($colors, 'rabbit-fur');
$color-input-required: map-get($colors, 'required-yellow');
$color-input-error: map-get($colors, 'critical-red');
$color-link-text: map-get($colors, 'active-blue');


// FONTS
$font-stack: 'Proxima Nova', Helvetica, Arial, sans-serif;
$font-pn-regular: 'ProximaNovaRegular', helvetica, arial, sans-serif;
$font-pn-bold: 'ProximaNovaBold', helvetica, arial, sans-serif;
$font-pn-light: 'ProximaNovaLight', helvetica, arial, sans-serif;
$font-pn-semibold: 'ProximaNovaSemibold', helvetica, arial, sans-serif;
$font-pn-cond-regular: 'ProximaNovaCondRegular', helvetica, arial, sans-serif;
$icon-font: 'iconfont';
$input-font-stack: proxima-nova, sans-serif;

// MISC
$layout-header-height: 64px; // used in miltiple includes
$layout-nav-width: 262px; // used in miltiple include
