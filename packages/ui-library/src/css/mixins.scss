
// APPEARANCE --------------------------------------------------------------------------------------

@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
}

@mixin box-shadow($shadow) {
    -webkit-box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    box-shadow: $shadow;
}

@mixin gradient-vertical($color-top, $color-bot, $top-percent:0%, $bot-percent:100%) {
    /* stylelint-disable */
    background: $color-top; // Old browsers
    background: -moz-linear-gradient(top, $color-top $top-percent, $color-bot $bot-percent); // FF3.6+
    background: -webkit-gradient(linear, left top, left bottom, color-stop($bot-percent,$color-top), color-stop($bot-percent,$color-bot)); // Chrome,Safari4+
    background: -webkit-linear-gradient(top, $color-top $top-percent,$color-bot $bot-percent); // Chrome10+,Safari5.1+
    background: -o-linear-gradient(top, $color-top $top-percent,$color-bot $bot-percent); // Opera 11.10+
    background: -ms-linear-gradient(top, $color-top $top-percent,$color-bot $bot-percent); // IE10+
    background: linear-gradient(to bottom, $color-top $top-percent,$color-bot $bot-percent); // W3C
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color-top}', endColorstr='#{$color-bot}',GradientType=0 ); // IE6-9
    /* stylelint-enable */
}

@mixin opacity($opacity) {
    $msopac: $opacity * 100;
    filter: alpha(opacity=$msopac);
    -ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$msopac})';
    opacity: $opacity;
}

@mixin blur($blur) {
    -webkit-filter: blur($blur);
    -moz-filter: blur($blur);
    -o-filter: blur($blur);
    -ms-filter: blur($blur);
    filter: blur($blur);
}


// TEXT --------------------------------------------------------------------------------------------

@mixin text-truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    -o-text-overflow: ellipsis;
    -ms-text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin text-size-adjust($tsa) {
    -moz-text-size-adjust: $tsa;
    -webkit-text-size-adjust: $tsa;
    -ms-text-size-adjust: $tsa;
}

@mixin placeholder-css($color, $font-weight, $padding-top, $font-style: italic) {
    ::-webkit-input-placeholder {
        color: $color;
        font-weight: $font-weight;
        padding: $padding-top 0 0;
        font-style: $font-style;
    }
    :-moz-placeholder { // Firefox 18-
        color: $color;
        font-weight: $font-weight;
        padding: $padding-top 0 0;
        font-style: $font-style;
    }
    ::-moz-placeholder {  // Firefox 19+
        color: $color;
        font-weight: $font-weight;
        padding: $padding-top 0 0;
        font-style: $font-style;
    }
    :-ms-input-placeholder {
        color: $color;
        font-weight: $font-weight;
        padding: $padding-top 0 0;
        font-style: $font-style;
    }
}


// ANIMATION

@mixin transition($transition) {
    -webkit-transition: $transition;
    -moz-transition: $transition;
    -ms-transition: $transition;
    -o-transition: $transition;
    transition: $transition;
}

@mixin transition-delay($transition-delay) {
    -webkit-transition-delay: $transition-delay;
    -moz-transition-delay: $transition-delay;
    -ms-transition: $transition-delay;
    -o-transition: $transition-delay;
    transition-delay: $transition-delay;
}

@mixin transition-duration($transition-duration) {
    -webkit-transition-duration: $transition-duration;
    -moz-transition-duration: $transition-duration;
    transition-duration: $transition-duration;
}

@mixin transform($transform) {
    -ms-transform: $transform;
    -webkit-transform: $transform;
    transform: $transform;
}

@mixin animation ($animation) {
    -webkit-animation: $animation;
    -moz-animation: $animation;
    -o-animation: $animation;
    animation: $animation;
}

@mixin rotate($degrees) {
    -webkit-transform: rotate($degrees);
    -moz-transform: rotate($degrees);
    -ms-transform: rotate($degrees);
    -o-transform: rotate($degrees);
    transform: rotate($degrees);
    // -ms-filter: "progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=#{-1*sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)})";
    // filter:  progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=#{cos($degrees)}, M12=#{-1*sin($degrees)}, M21=#{sin($degrees)}, M22=#{cos($degrees)});
}

@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }

    @-moz-keyframes #{$animation-name} {
        @content;
    }

    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin fadein-keyframes {
    @include keyframes('fade-in') {
        0% {
            opacity: 0;
        }
        100% {
            opacity: 1;
        }
    }
}

@include fadein-keyframes; // animation keyframes only need to be declared once and then can be used globally


// NUMERIC -----------------------------------------------------------------------------------------
// Power function : @param {Number} $x, @param {Number} $n, @return {Number}

@function pow($x, $n) {
    /* stylelint-disable */
    $ret: 1;
    @if $n >= 0 {
        @for $i from 1 through $n {
            $ret: $ret * $x;
        }
    } @else {
        @for $i from $n to 0 {
            $ret: $ret / $x;
        }
    }
    @return $ret;
    /* stylelint-enable */
}

@function to-fixed($float, $digits: 2) {
    $sass-precision: 5;

    @if $digits > $sass-precision {
        @warn 'Sass sets default precision to #{$sass-precision} digits, and there is no way to change that for now.'
            + 'The returned number will have #{$sass-precision} digits, even if you asked for `#{$digits}`.'
            + 'See https://github.com/sass/sass/issues/1122 for further informations.';
    }

    $pow: pow(10, $digits);

    @return round($float * $pow) / $pow;
}


// FLEXBOX ----------------------------------------------------------------------------------------

@mixin flexbox {
    display: -webkit-box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
}

@mixin flexbox-grow($value) {
    -webkit-box-flex: $value;
    -webkit-flex-grow: $value;
    -moz-flex-grow: $value;
    -ms-flex-positive: $value;
    flex-grow: $value;
}


// COLOR ----------------------------------------------------------------------------------------

@function tint($color, $percentage) {
    @return mix(white, $color, $percentage);
}

@function shade($color, $percentage) {
    @return mix(black, $color, $percentage);
}


// MISC --------------------------------------------------------------------------------------------

@mixin vertical-align {
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}

@mixin box-sizing($box-sizing) {
    -webkit-box-sizing: $box-sizing;
    -moz-box-sizing: $box-sizing;
    box-sizing: $box-sizing;
}

@mixin background-clip($background-clip) {
    -webkit-background-clip: $background-clip;
    -moz-background-clip: $background-clip;
    background-clip: $background-clip;
}

@mixin background-size($bgsize) {
    -webkit-background-size: $bgsize;
    -moz-background-size: $bgsize;
    -o-background-size: $bgsize;
    background-size: $bgsize;
}

@mixin grab-cursor {
	/* stylelint-disable */
    cursor: -moz-grab;
    cursor: -webkit-grab;
    cursor: grab;
    cursor: move;
	/* stylelint-enable */
}

@mixin appearance($appearance) {
    appearance: $appearance;
    -moz-appearance: $appearance;
    -webkit-appearance: $appearance;
    -o-appearance: $appearance;
}

@mixin clip($clip-property) {
    -moz-background-clip: $clip-property;
    -webkit-background-clip: $clip-property;
    background-clip: $clip-property;
}

@mixin button-spacing($spacing: 10px) {
    > .details-tooltip .details-target button {
        margin: 0;
    }

    > input[type=button],
    > button,
    > .button,
    > .details-tooltip {
        margin: 0;

        & ~ input[type=button],
        & ~ button,
        & ~ .button,
        & ~ .details-tooltip {
            margin-left: $spacing;
        }
    }
}


// DEPRECATED OR SITE-SPECIFIC ---------------------------------------------------------------------

@mixin chrome-fixed-positioning-bug-hack {
    -webkit-backface-visibility: hidden;
    -webkit-transform: translateZ(0);
}

@mixin transition-3($opacity, $visibility, $transform) {
    -webkit-transition: $opacity, $visibility, $transform;
    -moz-transition: $opacity, $visibility, $transform;
    -ms-transition: $opacity, $visibility, $transform;
    -o-transition: $opacity, $visibility, $transform;
    transition: $opacity, $visibility, $transform;
}

@mixin user-select($select) {
    -o-user-select: $select;
    -moz-user-select: $select;
    -webkit-user-select: $select;
    -ms-user-select: $select;
    user-select: $select;
}

@mixin keyframe ($animation-name) {
    @include keyframes($animation-name) {
        @content;
    }
}
