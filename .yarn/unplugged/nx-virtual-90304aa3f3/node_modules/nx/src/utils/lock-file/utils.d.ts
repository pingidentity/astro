import { PackageDependency, PackageVersions } from './lock-file-type';
import { ProjectGraph } from '../../config/project-graph';
/**
 * Simple sort function to ensure keys are ordered alphabetically
 * @param obj
 * @returns
 */
export declare function sortObject<T = string>(obj: Record<string, T>, valueTransformator?: (value: T) => any, descending?: boolean): Record<string, T> | undefined;
/**
 * Apply simple hashing of the content using the default hashing implementation
 * @param fileContent
 * @returns
 */
export declare function hashString(fileContent: string): string;
export declare function findMatchingVersion(packageName: string, packageVersions: PackageVersions, version: string): string;
export declare function isRootVersion(packageName: string, version: string): boolean;
/**
 * Returns node name depending whether it's root version or nested
 */
export declare function getNodeName(dep: string, version: string, rootVersion: boolean): `npm:${string}`;
export declare function mapExternalNodeDependencies(nodeName: string, packageVersion: PackageDependency, dependencies: Record<string, PackageVersions>, versionCache: Record<string, string>): any[];
export declare function hashExternalNodes(projectGraph: ProjectGraph): void;
