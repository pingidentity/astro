pipeline {
  agent {
    label 'ui-library-cdn-deploy'
  }
  stages {
    stage('npm-publish') {
      steps {
        dir("${env.WORKSPACE}/packages/ui-library") {
          container('node-builder') {
            echo 'Building & publishing ui-library'
            configFileProvider([configFile(fileId: 'art01.jenkins.settings.xml', targetLocation: 'settings.xml')]) {
              withCredentials([
                sshUserPrivateKey(credentialsId: "uilibrary.ping-eng.com-ubuntu-user", keyFileVariable: 'uiLibraryKeyPath'),
                sshUserPrivateKey(credentialsId: "hg-od01.corp.pingidentity.com-jira-user", keyFileVariable: 'gerritKeyPath')
              ]){
                sh "make GIT_BRANCH=${params.RELEASE_BRANCH} dist package-and-upload-for-hosting PRIVATE_SSH_KEY_PATH=${uiLibraryKeyPath} GERRIT_SSH_KEY_PATH=${gerritKeyPath}"
              }
            }
            configFileProvider([configFile(fileId: 'NPM_SETTINGS_FOR_ART01', targetLocation: '.npmrc')]) {
              script {
                env.UI_LIBRARY_FINAL_VERSION = sh(returnStdout: true, script: "grep 'UI_LIBRARY_FINAL_VERSION' version |cut -d'=' -f2 | tr -d '[:space:]'")
              }
              sh """
                npm version ${env.UI_LIBRARY_FINAL_VERSION} --no-git-tag-version;
                npm publish;
              """
            }
          }
        }
      }
      post {
        always {
          archiveArtifacts artifacts: "packages/ui-library/build-css/**", fingerprint: true
        }
      }
    }
  }
  post {
    success {
      container('node-builder') {
        withAWS(region: 'us-east-2', role: 'test-k8s-cdn-deployer', roleAccount: '208980577242') {
          withAWS(region: 'us-east-2', role: 'test-cdn-deploy-role', roleAccount: '208980577242') {
            s3Upload(bucket:'pingidentity-test-assets-us-east-2', path:'ux/ui-library/', file: "${env.WORKSPACE}/packages/ui-library/build-css/")
          }
        }
        withAWS(region: 'us-east-2', role: 'ort-k8s-cdn-deployer', roleAccount: '208980577242') {
          withAWS(region: 'us-east-2', role: 'ort-cdn-deploy-role', roleAccount: '208980577242') {
            s3Upload(bucket:'pingidentity-staging-assets-us-east-2', path:'ux/ui-library/', file: "${env.WORKSPACE}/packages/ui-library/build-css/")
          }
        }
        withAWS(region: 'us-east-2', role: 'prod-k8s-cdn-deployer', roleAccount: '208980577242') {
          withAWS(region: 'us-east-2', role: 'prod-cdn-deploy-role', roleAccount: '208980577242') {
            s3Upload(bucket:'pingidentity-prod-assets-us-east-2', path:'ux/ui-library/', file: "${env.WORKSPACE}/packages/ui-library/build-css/")
          }
        }
       slackSend channel: '#ux-deployments', message: ":verynice: Great Success! UI Library ${env.UI_LIBRARY_FINAL_VERSION} has been released. ${BUILD_URL} ", color: "#4aba78"
       slackSend channel: '#ui-announcements', message: "@here UI-Library ${env.RELEASE_VERSION} has been released.", color: "#4aba78"
       slackSend channel: '#ui-coalition', message: "@here UI-Library ${env.RELEASE_VERSION} has been released.", color: "#4aba78"
      }
    }
    unsuccessful {
       slackSend channel: '#ux-deployments', message: "@here :tears: UI Library build-job:  ${BUILD_URL} failed! ${env.UI_LIBRARY_FINAL_VERSION} has not been released", color: "#a31300"
    }
  }
}
